<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_sprite_8c" kind="file">
    <compoundname>Sprite.c</compoundname>
    <includes local="yes">Include/Sprite.h</includes>
    <incdepgraph>
      <node id="80">
        <label>D:/uni/lcom/MINIX-LCOM/shared/g03/proj/src/Sprite.c</label>
        <link refid="Sprite.c"/>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>Include/Sprite.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_sprite_8c_1a79eca493e1fc1880af8aa60352725228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Sprite *</type>
        <definition>Sprite* create_sprite</definition>
        <argsstring>(xpm_image_t img, int x, int y, int xspeed_, int yspeed_, enum Direction direction_, enum State state_)</argsstring>
        <name>create_sprite</name>
        <param>
          <type>xpm_image_t</type>
          <declname>img</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xspeed_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yspeed_</declname>
        </param>
        <param>
          <type>enum Direction</type>
          <declname>direction_</declname>
        </param>
        <param>
          <type>enum State</type>
          <declname>state_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/uni/lcom/MINIX-LCOM/shared/g03/proj/src/Sprite.c" line="3" column="1" bodyfile="D:/uni/lcom/MINIX-LCOM/shared/g03/proj/src/Sprite.c" bodystart="3" bodyend="25"/>
        <referencedby refid="database_8c_1ae22efbef048670adabc68ecaab67c42b" compoundref="database_8c" startline="100" endline="107">create_Duck</referencedby>
        <referencedby refid="database_8c_1abba601c16d2694fdfaf8eca49c3e6f9c" compoundref="database_8c" startline="90" endline="92">createCrosshair</referencedby>
      </memberdef>
      <memberdef kind="function" id="_sprite_8c_1af16c6befaac9ffb673b9e3c798d542ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroy_sprite</definition>
        <argsstring>(Sprite *sp)</argsstring>
        <name>destroy_sprite</name>
        <param>
          <type>Sprite *</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/uni/lcom/MINIX-LCOM/shared/g03/proj/src/Sprite.c" line="27" column="1" bodyfile="D:/uni/lcom/MINIX-LCOM/shared/g03/proj/src/Sprite.c" bodystart="27" bodyend="35"/>
        <referencedby refid="database_8c_1a046399e2d517fd587a23bcd0b0e23ab9" compoundref="database_8c" startline="80" endline="88">gameDestroy</referencedby>
        <referencedby refid="database_8c_1a213945eb102ff02fa211dd75a6472d42" compoundref="database_8c" startline="65" endline="78">gameReset</referencedby>
        <referencedby refid="duck_8c_1a719cabe8173fc0ffb53a96991e80584a" compoundref="duck_8c" startline="159" endline="238">update_Duck</referencedby>
      </memberdef>
      <memberdef kind="function" id="_sprite_8c_1a6c75fbf31230126d2f19b29deaf24b2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int draw_sprite</definition>
        <argsstring>(Sprite *sp)</argsstring>
        <name>draw_sprite</name>
        <param>
          <type>Sprite *</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/uni/lcom/MINIX-LCOM/shared/g03/proj/src/Sprite.c" line="37" column="1" bodyfile="D:/uni/lcom/MINIX-LCOM/shared/g03/proj/src/Sprite.c" bodystart="37" bodyend="60"/>
        <referencedby refid="database_8c_1ad915b0e6f90c8c9e759721a8460445f7" compoundref="database_8c" startline="253" endline="260">draw_ducks</referencedby>
        <referencedby refid="database_8c_1a16e95c1aa375ed27180585335be4c819" compoundref="database_8c" startline="152" endline="154">drawCrosshair</referencedby>
      </memberdef>
      <memberdef kind="function" id="_sprite_8c_1af14295fd1fbc31a8f2f8b3e2e056d64b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void change_Sprite_Img</definition>
        <argsstring>(Sprite *sprite, xpm_image_t img)</argsstring>
        <name>change_Sprite_Img</name>
        <param>
          <type>Sprite *</type>
          <declname>sprite</declname>
        </param>
        <param>
          <type>xpm_image_t</type>
          <declname>img</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/uni/lcom/MINIX-LCOM/shared/g03/proj/src/Sprite.c" line="62" column="1" bodyfile="D:/uni/lcom/MINIX-LCOM/shared/g03/proj/src/Sprite.c" bodystart="62" bodyend="66"/>
        <referencedby refid="duck_8c_1aa57a346d4d9ecd332bd7068e6d24b860" compoundref="duck_8c" startline="59" endline="89">change_dir</referencedby>
        <referencedby refid="hitboxes_8c_1a4fd8478f0a41064533c224cf8feee0b3" compoundref="hitboxes_8c" startline="14" endline="32">checkDuckGotShot</referencedby>
        <referencedby refid="duck_8c_1a808a9aa7d7b3a927b55122d0560da032" compoundref="duck_8c" startline="90" endline="158">update_direction</referencedby>
        <referencedby refid="duck_8c_1a719cabe8173fc0ffb53a96991e80584a" compoundref="duck_8c" startline="159" endline="238">update_Duck</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Include/Sprite.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="_sprite_8c_1a79eca493e1fc1880af8aa60352725228" refkind="member"><highlight class="normal">Sprite<sp/>*<ref refid="_sprite_8c_1a79eca493e1fc1880af8aa60352725228" kindref="member">create_sprite</ref>(xpm_image_t<sp/>img,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xspeed_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yspeed_,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Direction<sp/>direction_,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>State<sp/>state_)<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>space<sp/>for<sp/>the<sp/>&quot;object&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/>Sprite<sp/>*sp<sp/>=<sp/>(Sprite<sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Sprite));</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>xpm_image_t<sp/>img;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>sprite<sp/>pixmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>sp-&gt;map<sp/>=<sp/>img.bytes;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp-&gt;map<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>free(sp);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>sp-&gt;x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>sp-&gt;y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>sp-&gt;width<sp/>=<sp/>img.width;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>sp-&gt;height<sp/>=<sp/>img.height;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>sp-&gt;xspeed<sp/>=<sp/>xspeed_;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>sp-&gt;yspeed<sp/>=<sp/>yspeed_;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>sp-&gt;direction<sp/>=<sp/>direction_;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>sp-&gt;state<sp/>=<sp/>state_;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="_sprite_8c_1af16c6befaac9ffb673b9e3c798d542ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sprite_8c_1af16c6befaac9ffb673b9e3c798d542ed" kindref="member">destroy_sprite</ref>(Sprite<sp/>*sp)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>free(sp-&gt;map);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>free(sp);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>sp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="_sprite_8c_1a6c75fbf31230126d2f19b29deaf24b2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_sprite_8c_1a6c75fbf31230126d2f19b29deaf24b2f" kindref="member">draw_sprite</ref>(Sprite<sp/>*sp)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>uint32_t<sp/>transparent<sp/>=<sp/>xpm_transparency_color(XPM_8_8_8_8);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*color<sp/>=<sp/>(uint32_t<sp/>*)<sp/>sp-&gt;map;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>for<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sp-&gt;height;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sp-&gt;y<sp/>+<sp/>i)<sp/>&gt;=<sp/>(int)<sp/>get_v_res())</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>sp-&gt;width;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sp-&gt;x<sp/>+<sp/>j)<sp/>&gt;=<sp/>(int)<sp/>get_h_res())</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*color<sp/>!=<sp/>transparent)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(change_pixel_color(sp-&gt;x<sp/>+<sp/>j,<sp/>sp-&gt;y<sp/>+<sp/>i,<sp/>*color)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>color++;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="_sprite_8c_1af14295fd1fbc31a8f2f8b3e2e056d64b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sprite_8c_1af14295fd1fbc31a8f2f8b3e2e056d64b" kindref="member">change_Sprite_Img</ref>(Sprite<sp/>*sprite,<sp/>xpm_image_t<sp/>img)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>sprite-&gt;map<sp/>=<sp/>img.bytes;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>sprite-&gt;width<sp/>=<sp/>img.width;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>sprite-&gt;height<sp/>=<sp/>img.height;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/uni/lcom/MINIX-LCOM/shared/g03/proj/src/Sprite.c"/>
  </compounddef>
</doxygen>
